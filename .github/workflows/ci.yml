name: TA Library CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        cd ta
        uv pip install --system -e ".[dev]"
    
    - name: Run linter (ruff)
      run: |
        cd ta
        ruff check laakhay/ tests/
    
    - name: Run formatter check (ruff)
      run: |
        cd ta
        ruff format --check laakhay/ tests/
    
    - name: Run type checker (pyright)
      run: |
        cd ta
        pyright laakhay/ tests/ || echo "Type checking completed with warnings"
    
    - name: Run tests
      run: |
        cd ta
        pytest tests/ -v --tb=short
    
    - name: Run tests with coverage
      if: matrix.python-version == '3.13'
      run: |
        cd ta
        pip install pytest-cov
        pytest tests/ --cov=laakhay.ta --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v4
      with:
        file: ta/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install build tools
      run: |
        pip install build twine
    
    - name: Build package
      run: |
        cd ta
        python -m build
    
    - name: Check package
      run: |
        cd ta
        twine check dist/*
